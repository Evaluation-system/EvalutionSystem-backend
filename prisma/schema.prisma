// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int            @id @default(autoincrement())
  email    String         @unique
  role     Role           @default(USER)
  password String?
  name String?
  projects UserProject[]
}

model UserProject {
  id               Int                @id @default(autoincrement())
  title            String
  description      String?
  client           String?
  user             User?              @relation(fields: [userId], references: [id])
  userId           Int?
  procing          Procing[]
  tasks            Task[]
  employeePayments EmployeePayment[]
  phase  phase[]
  pathImage String? 
  price Int?
  terms Int? 
}

model Procing {
  id        Int           @id @default(autoincrement())
  cost      String
  value     Int
  project   UserProject? @relation(fields: [projectId], references: [id])
  projectId Int?
}

model Task {
  id        Int           @id @default(autoincrement())
  task      String
  time      Int
  project   UserProject? @relation(fields: [projectId], references: [id])
  projectId Int?
}

model EmployeePayment {
  id        Int           @id @default(autoincrement())
  employee  String
  salary    Int
  Project   UserProject? @relation(fields: [ProjectId], references: [id])
  ProjectId Int?
}

model phase {
  id        Int           @id @default(autoincrement())
  project   UserProject? @relation(fields: [projectId], references: [id])
  projectId Int?
  phaseTasks phaseTasks[]
}

model phaseTasks {
  id        Int           @id @default(autoincrement())
  titleTask      String
  descriptionTask   String
  countTask      Int
  roleEmployee String
  starTask Int
  endTask Int
  phase   phase? @relation(fields: [phaseId], references: [id])
  phaseId Int?
}

enum Role {
  USER
  ADMIN
}
